
/*

DROP SEQUENCE SQ_AM_ESTADO;
DROP SEQUENCE SQ_AM_CIDADE;
DROP SEQUENCE SQ_AM_BAIRRO;
DROP SEQUENCE SQ_AM_TIPO_LOG;
--DROP SEQUENCE SQ_AM_LOGRADOURO;
DROP SEQUENCE SQ_AM_TIPO_FONE;
DROP SEQUENCE SQ_AM_TELEFONE;
DROP SEQUENCE SQ_AM_PESSOA;
DROP SEQUENCE SQ_AM_PESSOA_ENDE;
DROP SEQUENCE SQ_AM_RESERVA;
DROP SEQUENCE SQ_AM_QUARTO;
DROP SEQUENCE SQ_AM_TIPO_QUARTO;
DROP SEQUENCE SQ_AM_HISTORICO_VALOR;
DROP SEQUENCE SQ_AM_TIPO_FORMAPAG;
DROP SEQUENCE SQ_AM_HOSPEDAGEM;
DROP SEQUENCE SQ_AM_PAGTO_CARTAO;
DROP SEQUENCE SQ_AM_PAGTO_CHEQUE;
DROP SEQUENCE SQ_AM_CONSUMO;
DROP SEQUENCE SQ_AM_TIPO_CONSUMO;
DROP SEQUENCE SQ_AM_HIST_PRECO_PRODUTO;
DROP SEQUENCE SQ_AM_CARGO;
COMMIT;

*/

-- SEQUENCES
CREATE SEQUENCE SQ_AM_ESTADO -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_AM_CIDADE -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_AM_BAIRRO -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_AM_TIPO_LOG -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_AM_TIPO_FONE -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_AM_TELEFONE -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999999
NOCACHE
NOCYCLE;  

CREATE SEQUENCE SQ_AM_PESSOA -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_AM_PESSOA_ENDE -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_RESERVA -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_QUARTO -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 9999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_TIPO_QUARTO -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_HISTORICO_VALOR -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 999999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_TIPO_FORMAPAG -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 9
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_HOSPEDAGEM -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_PAGTO_CARTAO -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 999999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_PAGTO_CHEQUE -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 999999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_CONSUMO -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_TIPO_CONSUMO -- OK
INCREMENT BY 1
START WITH 1
MAXVALUE 99999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_HIST_PRECO_PRODUTO
INCREMENT BY 1
START WITH 1
MAXVALUE 99999999
NOCACHE
NOCYCLE; 

CREATE SEQUENCE SQ_AM_CARGO
INCREMENT BY 1
START WITH 1
MAXVALUE 99999999
NOCACHE
NOCYCLE;

-- Triggers de sequência
CREATE OR REPLACE TRIGGER TR_SQ_AM_ESTADO
BEFORE INSERT ON T_AM_HBV_ESTADO
FOR EACH ROW
 WHEN (new.CD_ESTADO IS NULL) 
BEGIN
  SELECT SQ_AM_ESTADO.NEXTVAL 
  INTO :new.CD_ESTADO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_CIDADE
BEFORE INSERT ON T_AM_HBV_CIDADE
FOR EACH ROW
 WHEN (new.CD_CIDADE IS NULL) 
BEGIN
  SELECT SQ_AM_CIDADE.NEXTVAL 
  INTO :new.CD_CIDADE
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_BAIRRO
BEFORE INSERT ON T_AM_HBV_BAIRRO
FOR EACH ROW
 WHEN (new.CD_BAIRRO IS NULL) 
BEGIN
  SELECT SQ_AM_BAIRRO.NEXTVAL 
  INTO :new.CD_BAIRRO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_TIPO_LOG
BEFORE INSERT ON T_AM_HBV_TIPO_LOGRADOURO
FOR EACH ROW
 WHEN (new.CD_TIPO_LOGRADOURO IS NULL) 
BEGIN
  SELECT SQ_AM_TIPO_LOG.NEXTVAL 
  INTO :new.CD_TIPO_LOGRADOURO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_TIPO_FONE
BEFORE INSERT ON T_AM_HBV_TIPO_TELEFONE
FOR EACH ROW
 WHEN (new.CD_TIPO_TELEFONE IS NULL) 
BEGIN
  SELECT SQ_AM_TIPO_FONE.NEXTVAL 
  INTO :new.CD_TIPO_TELEFONE
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_TELEFONE
BEFORE INSERT ON T_AM_HBV_TELEFONE
FOR EACH ROW
 WHEN (new.CD_TELEFONE IS NULL) 
BEGIN
  SELECT SQ_AM_TELEFONE.NEXTVAL 
  INTO :new.CD_TELEFONE
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_PESSOA
BEFORE INSERT ON T_AM_HBV_PESSOA
FOR EACH ROW
 WHEN (new.CD_PESSOA IS NULL) 
BEGIN
  SELECT SQ_AM_PESSOA.NEXTVAL 
  INTO :new.CD_PESSOA
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_PESSOA_ENDE
BEFORE INSERT ON T_AM_HBV_PESSOA_ENDERECO
FOR EACH ROW
 WHEN (new.CD_PESSOA_ENDERECO IS NULL) 
BEGIN
  SELECT SQ_AM_PESSOA_ENDE.NEXTVAL 
  INTO :new.CD_PESSOA_ENDERECO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_RESERVA
BEFORE INSERT ON T_AM_HBV_RESERVA
FOR EACH ROW
 WHEN (new.CD_RESERVA IS NULL) 
BEGIN
  SELECT SQ_AM_RESERVA.NEXTVAL 
  INTO :new.CD_RESERVA
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_QUARTO
BEFORE INSERT ON T_AM_HBV_QUARTO
FOR EACH ROW
 WHEN (new.NR_QUARTO IS NULL) 
BEGIN
  SELECT SQ_AM_QUARTO.NEXTVAL 
  INTO :new.NR_QUARTO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_TIPO_QUARTO
BEFORE INSERT ON T_AM_HBV_TIPO_QUARTO
FOR EACH ROW
 WHEN (new.CD_TIPO_QUARTO IS NULL) 
BEGIN
  SELECT SQ_AM_TIPO_QUARTO.NEXTVAL 
  INTO :new.CD_TIPO_QUARTO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_HISTORICO_VALOR
BEFORE INSERT ON T_AM_HBV_HIST_VALOR
FOR EACH ROW
 WHEN (new.CD_HIST_VALOR IS NULL) 
BEGIN
  SELECT SQ_AM_HISTORICO_VALOR.NEXTVAL 
  INTO :new.CD_HIST_VALOR
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_TIPO_FORMAPAG
BEFORE INSERT ON T_AM_HBV_TIPO_FORMAPAG
FOR EACH ROW
 WHEN (new.CD_TIPO_FORMAPAG IS NULL) 
BEGIN
  SELECT SQ_AM_TIPO_FORMAPAG.NEXTVAL 
  INTO :new.CD_TIPO_FORMAPAG
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_HOSPEDAGEM
BEFORE INSERT ON T_AM_HBV_HOSPEDAGEM
FOR EACH ROW
 WHEN (new.CD_HOSPEDAGEM IS NULL) 
BEGIN
  SELECT SQ_AM_HOSPEDAGEM.NEXTVAL 
  INTO :new.CD_HOSPEDAGEM
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_PAGTO_CARTAO
BEFORE INSERT ON T_AM_HBV_PAG_CARTAO
FOR EACH ROW
 WHEN (new.CD_PAGTO_CARTAO IS NULL) 
BEGIN
  SELECT SQ_AM_PAGTO_CARTAO.NEXTVAL 
  INTO :new.CD_PAGTO_CARTAO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_PAGTO_CHEQUE
BEFORE INSERT ON T_AM_HBV_PAG_CHEQUE
FOR EACH ROW
 WHEN (new.CD_PAGTO_CHEQUE IS NULL) 
BEGIN
  SELECT SQ_AM_PAGTO_CHEQUE.NEXTVAL 
  INTO :new.CD_PAGTO_CHEQUE
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_CONSUMO
BEFORE INSERT ON T_AM_HBV_CONSUMO
FOR EACH ROW
 WHEN (new.CD_CONSUMO IS NULL) 
BEGIN
  SELECT SQ_AM_CONSUMO.NEXTVAL 
  INTO :new.CD_CONSUMO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_TIPO_CONSUMO
BEFORE INSERT ON T_AM_HBV_TIPO_CONSUMO
FOR EACH ROW
 WHEN (new.CD_TIPO_CONSUMO IS NULL) 
BEGIN
  SELECT SQ_AM_TIPO_CONSUMO.NEXTVAL 
  INTO :new.CD_TIPO_CONSUMO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_HIST_PRECO_PRODUTO
BEFORE INSERT ON T_AM_HBV_HIST_PRECO
FOR EACH ROW
 WHEN (new.CD_HIST_PRECO IS NULL) 
BEGIN
  SELECT SQ_AM_HIST_PRECO_PRODUTO.NEXTVAL 
  INTO :new.CD_HIST_PRECO
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TR_SQ_AM_CARGO
BEFORE INSERT ON T_AM_HBV_CARGO
FOR EACH ROW
 WHEN (new.CD_CARGO IS NULL) 
BEGIN
  SELECT SQ_AM_CARGO.NEXTVAL 
  INTO :new.CD_CARGO
  FROM dual;
END;
/

COMMIT;